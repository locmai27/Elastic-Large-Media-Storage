{"ast":null,"code":"// frontend/src/services/api.js\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nexport const uploadFile = async (file, onProgress) => {\n  // First, get the pre-signed URL\n  const response = await axios.post(`${API_BASE_URL}/upload`, {\n    fileName: file.name,\n    fileSize: file.size,\n    contentType: file.type\n  });\n\n  // Upload to S3 using pre-signed URL\n  await axios.put(response.data.uploadUrl, file, {\n    headers: {\n      'Content-Type': file.type\n    },\n    onUploadProgress: progressEvent => {\n      const percentage = progressEvent.loaded * 100 / progressEvent.total;\n      onProgress(Math.round(percentage));\n    }\n  });\n  return response.data;\n};\nexport const getFiles = async () => {\n  const response = await axios.get(`${API_BASE_URL}/files`);\n  return response.data;\n};\nexport const getFileUrl = async fileId => {\n  const response = await axios.get(`${API_BASE_URL}/files/${fileId}/url`);\n  return response.data.url;\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","uploadFile","file","onProgress","response","post","fileName","name","fileSize","size","contentType","type","put","data","uploadUrl","headers","onUploadProgress","progressEvent","percentage","loaded","total","Math","round","getFiles","get","getFileUrl","fileId","url"],"sources":["/Users/locsforstudygmail.com/Desktop/code/Projects Challenge/Elastic-Large-Media-Storage/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const uploadFile = async (file, onProgress) => {\n    // First, get the pre-signed URL\n    const response = await axios.post(`${API_BASE_URL}/upload`, {\n        fileName: file.name,\n        fileSize: file.size,\n        contentType: file.type\n    });\n\n    // Upload to S3 using pre-signed URL\n    await axios.put(response.data.uploadUrl, file, {\n        headers: { 'Content-Type': file.type },\n        onUploadProgress: (progressEvent) => {\n            const percentage = (progressEvent.loaded * 100) / progressEvent.total;\n            onProgress(Math.round(percentage));\n        }\n    });\n\n    return response.data;\n};\n\nexport const getFiles = async () => {\n    const response = await axios.get(`${API_BASE_URL}/files`);\n    return response.data;\n};\n\nexport const getFileUrl = async (fileId) => {\n    const response = await axios.get(`${API_BASE_URL}/files/${fileId}/url`);\n    return response.data.url;\n};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEC,UAAU,KAAK;EAClD;EACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,YAAY,SAAS,EAAE;IACxDS,QAAQ,EAAEJ,IAAI,CAACK,IAAI;IACnBC,QAAQ,EAAEN,IAAI,CAACO,IAAI;IACnBC,WAAW,EAAER,IAAI,CAACS;EACtB,CAAC,CAAC;;EAEF;EACA,MAAMf,KAAK,CAACgB,GAAG,CAACR,QAAQ,CAACS,IAAI,CAACC,SAAS,EAAEZ,IAAI,EAAE;IAC3Ca,OAAO,EAAE;MAAE,cAAc,EAAEb,IAAI,CAACS;IAAK,CAAC;IACtCK,gBAAgB,EAAGC,aAAa,IAAK;MACjC,MAAMC,UAAU,GAAID,aAAa,CAACE,MAAM,GAAG,GAAG,GAAIF,aAAa,CAACG,KAAK;MACrEjB,UAAU,CAACkB,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IACtC;EACJ,CAAC,CAAC;EAEF,OAAOd,QAAQ,CAACS,IAAI;AACxB,CAAC;AAED,OAAO,MAAMU,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMnB,QAAQ,GAAG,MAAMR,KAAK,CAAC4B,GAAG,CAAC,GAAG3B,YAAY,QAAQ,CAAC;EACzD,OAAOO,QAAQ,CAACS,IAAI;AACxB,CAAC;AAED,OAAO,MAAMY,UAAU,GAAG,MAAOC,MAAM,IAAK;EACxC,MAAMtB,QAAQ,GAAG,MAAMR,KAAK,CAAC4B,GAAG,CAAC,GAAG3B,YAAY,UAAU6B,MAAM,MAAM,CAAC;EACvE,OAAOtB,QAAQ,CAACS,IAAI,CAACc,GAAG;AAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}