{"ast":null,"code":"var _jsxFileName = \"/Users/locsforstudygmail.com/Desktop/code/Projects Challenge/Elastic-Large-Media-Storage/frontend/src/components/FileList/index.js\";\n// frontend/src/components/FileList/index.js\nimport React from 'react';\nimport { formatBytes, formatDate } from '../../utils/formatters';\nimport './FileList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FileList = ({\n  files,\n  onFileSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uploaded Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-grid\",\n      children: files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-item\",\n        onClick: () => onFileSelect(file),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-icon\",\n          children: getFileIcon(file.contentType)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-name\",\n            children: file.originalName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-size\",\n            children: formatBytes(file.size)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-date\",\n            children: formatDate(file.createdAt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this)]\n      }, file.fileId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = FileList;\nvar _c;\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"names":["React","formatBytes","formatDate","jsxDEV","_jsxDEV","FileList","files","onFileSelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","file","onClick","getFileIcon","contentType","originalName","size","createdAt","fileId","_c","$RefreshReg$"],"sources":["/Users/locsforstudygmail.com/Desktop/code/Projects Challenge/Elastic-Large-Media-Storage/frontend/src/components/FileList/index.js"],"sourcesContent":["// frontend/src/components/FileList/index.js\nimport React from 'react';\nimport { formatBytes, formatDate } from '../../utils/formatters';\nimport './FileList.css';\n\nexport const FileList = ({ files, onFileSelect }) => {\n    return (\n        <div className=\"file-list\">\n            <h2>Uploaded Files</h2>\n            <div className=\"file-grid\">\n                {files.map((file) => (\n                    <div \n                        key={file.fileId} \n                        className=\"file-item\"\n                        onClick={() => onFileSelect(file)}\n                    >\n                        <div className=\"file-icon\">\n                            {getFileIcon(file.contentType)}\n                        </div>\n                        <div className=\"file-info\">\n                            <span className=\"file-name\">{file.originalName}</span>\n                            <span className=\"file-size\">{formatBytes(file.size)}</span>\n                            <span className=\"file-date\">\n                                {formatDate(file.createdAt)}\n                            </span>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,UAAU,QAAQ,wBAAwB;AAChE,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAa,CAAC,KAAK;EACjD,oBACIH,OAAA;IAAKI,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBL,OAAA;MAAAK,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBT,OAAA;MAAKI,SAAS,EAAC,WAAW;MAAAC,QAAA,EACrBH,KAAK,CAACQ,GAAG,CAAEC,IAAI,iBACZX,OAAA;QAEII,SAAS,EAAC,WAAW;QACrBQ,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACQ,IAAI,CAAE;QAAAN,QAAA,gBAElCL,OAAA;UAAKI,SAAS,EAAC,WAAW;UAAAC,QAAA,EACrBQ,WAAW,CAACF,IAAI,CAACG,WAAW;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACNT,OAAA;UAAKI,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACtBL,OAAA;YAAMI,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEM,IAAI,CAACI;UAAY;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtDT,OAAA;YAAMI,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAER,WAAW,CAACc,IAAI,CAACK,IAAI;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC3DT,OAAA;YAAMI,SAAS,EAAC,WAAW;YAAAC,QAAA,EACtBP,UAAU,CAACa,IAAI,CAACM,SAAS;UAAC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA,GAbDE,IAAI,CAACO,MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcf,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACU,EAAA,GA1BWlB,QAAQ;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}