{"ast":null,"code":"var _jsxFileName = \"/Users/locsforstudygmail.com/Desktop/code/Projects Challenge/Elastic-Large-Media-Storage/frontend/src/components/FileUpload/index.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/FileUpload/index.js\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { uploadFile } from '../../services/api';\nimport { formatBytes } from '../../utils/formatters';\nimport './FileUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FileUpload = ({\n  onUploadComplete\n}) => {\n  _s();\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const onDrop = useCallback(async acceptedFiles => {\n    const file = acceptedFiles[0];\n    setIsUploading(true);\n    try {\n      const result = await uploadFile(file, progress => {\n        setUploadProgress(progress);\n      });\n      onUploadComplete(result);\n    } catch (error) {\n      console.error('Upload failed:', error);\n    } finally {\n      setIsUploading(false);\n      setUploadProgress(0);\n    }\n  }, [onUploadComplete]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    maxFiles: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `dropzone ${isDragActive ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), isUploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n          value: uploadProgress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [uploadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag & drop a file here, or click to select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"RTmGt24E5nbb3UptxVBrgAjIjug=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useCallback","useDropzone","uploadFile","formatBytes","jsxDEV","_jsxDEV","FileUpload","onUploadComplete","_s","uploadProgress","setUploadProgress","isUploading","setIsUploading","onDrop","acceptedFiles","file","result","progress","error","console","getRootProps","getInputProps","isDragActive","maxFiles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","max","_c","$RefreshReg$"],"sources":["/Users/locsforstudygmail.com/Desktop/code/Projects Challenge/Elastic-Large-Media-Storage/frontend/src/components/FileUpload/index.js"],"sourcesContent":["// frontend/src/components/FileUpload/index.js\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { uploadFile } from '../../services/api';\nimport { formatBytes } from '../../utils/formatters';\nimport './FileUpload.css';\n\nexport const FileUpload = ({ onUploadComplete }) => {\n    const [uploadProgress, setUploadProgress] = useState(0);\n    const [isUploading, setIsUploading] = useState(false);\n\n    const onDrop = useCallback(async (acceptedFiles) => {\n        const file = acceptedFiles[0];\n        setIsUploading(true);\n        \n        try {\n            const result = await uploadFile(file, (progress) => {\n                setUploadProgress(progress);\n            });\n            onUploadComplete(result);\n        } catch (error) {\n            console.error('Upload failed:', error);\n        } finally {\n            setIsUploading(false);\n            setUploadProgress(0);\n        }\n    }, [onUploadComplete]);\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop,\n        maxFiles: 1\n    });\n\n    return (\n        <div className=\"upload-container\">\n            <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''}`}>\n                <input {...getInputProps()} />\n                {isUploading ? (\n                    <div className=\"progress-container\">\n                        <progress value={uploadProgress} max=\"100\" />\n                        <span>{uploadProgress}%</span>\n                    </div>\n                ) : (\n                    <p>Drag & drop a file here, or click to select</p>\n                )}\n            </div>\n        </div>\n    );\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMc,MAAM,GAAGb,WAAW,CAAC,MAAOc,aAAa,IAAK;IAChD,MAAMC,IAAI,GAAGD,aAAa,CAAC,CAAC,CAAC;IAC7BF,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAI;MACA,MAAMI,MAAM,GAAG,MAAMd,UAAU,CAACa,IAAI,EAAGE,QAAQ,IAAK;QAChDP,iBAAiB,CAACO,QAAQ,CAAC;MAC/B,CAAC,CAAC;MACFV,gBAAgB,CAACS,MAAM,CAAC;IAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IAC1C,CAAC,SAAS;MACNN,cAAc,CAAC,KAAK,CAAC;MACrBF,iBAAiB,CAAC,CAAC,CAAC;IACxB;EACJ,CAAC,EAAE,CAACH,gBAAgB,CAAC,CAAC;EAEtB,MAAM;IAAEa,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGrB,WAAW,CAAC;IAC9DY,MAAM;IACNU,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,oBACIlB,OAAA;IAAKmB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7BpB,OAAA;MAAA,GAASe,YAAY,CAAC,CAAC;MAAEI,SAAS,EAAE,YAAYF,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;MAAAG,QAAA,gBAC3EpB,OAAA;QAAA,GAAWgB,aAAa,CAAC;MAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC7BlB,WAAW,gBACRN,OAAA;QAAKmB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAC/BpB,OAAA;UAAUyB,KAAK,EAAErB,cAAe;UAACsB,GAAG,EAAC;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7CxB,OAAA;UAAAoB,QAAA,GAAOhB,cAAc,EAAC,GAAC;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,gBAENxB,OAAA;QAAAoB,QAAA,EAAG;MAA2C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACpD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACrB,EAAA,CAzCWF,UAAU;EAAA,QAqBmCL,WAAW;AAAA;AAAA+B,EAAA,GArBxD1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}